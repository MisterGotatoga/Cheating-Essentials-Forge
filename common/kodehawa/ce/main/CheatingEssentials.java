package common.kodehawa.ce.main;

import java.util.Arrays;
import java.util.logging.Level;

import javax.annotation.processing.SupportedSourceVersion;
import javax.lang.model.SourceVersion;

import net.minecraft.command.ICommandManager;
import net.minecraft.command.ServerCommandManager;
import net.minecraft.server.MinecraftServer;
import net.minecraftforge.common.MinecraftForge;
import common.kodehawa.ce.apicommands.APICommandManager;
import common.kodehawa.ce.commands.*;
import common.kodehawa.ce.config.ConfigurationManager;
import common.kodehawa.ce.logger.DynamicLogger;
import common.kodehawa.ce.module.man.ModuleManager;
import common.kodehawa.ce.tick.TickHandler;
import common.kodehawa.ce.util.CEConnectionHandler;
import common.kodehawa.ce.util.ForgeEvents;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.event.FMLServerStartingEvent;
import cpw.mods.fml.common.network.NetworkMod;
import cpw.mods.fml.common.network.NetworkRegistry;
import cpw.mods.fml.common.registry.TickRegistry;
import cpw.mods.fml.relauncher.Side;

/**
 * Note from author:
 * You have the RIGHT to say that my code is horrible.
 * You have the RIGHT to say that this is like a Hacked Client.
 * You have the RIGHT to say that this code is skidded.
 * But it's my code, it's not skidded and the HC GUI and the Module System is the thing that makes this looks like a HC, but this is
 * NOT. ReesZRB, one of the persons that's working in CE since 3.1, is a HC coder, and he obviously makes the GUI looks like that, 
 * but I like how it looks. A lot of people likes how it looks. We have the RIGHT to do anything that we want with our code.
 * If this is Open Source IT'S for let's people to LEARN, not for see you doing criticism to it with VERY BAD arguments.
 * Thanks
 * Main Cheating Essentials class. This class loads all the things that the mod needs. The classes that loads other classes too :)
 * @author Kodehawa
 * @since 22/10/2013
 * @version 4.0
 */

@SupportedSourceVersion(SourceVersion.RELEASE_6)
@Mod(modid="Cheating-Essentials", name="Cheating Essentials Reloaded", version="4.1.1")
@NetworkMod(serverSideRequired = false)
public class CheatingEssentials
{

	@Instance("Cheating-Essentials")
	public static CheatingEssentials main;
	TickHandler tickhandler = new TickHandler();
	
	@EventHandler
	public void preInitialization(FMLPreInitializationEvent e)
	{
		DynamicLogger.instance().writeLog("Loading Cheating Essentials "+modVersion+" in " + MinecraftForge.getBrandingVersion(), Level.INFO);
		MinecraftForge.EVENT_BUS.register(new ForgeEvents());
		
		/********* Cheating Essentials METADATA DECLARATION START *********/
		
		ModMetadata mMetadata = e.getModMetadata();
		mMetadata.credits = "Kodehawa";
		mMetadata.description = "The most complete Forge cheating mod, with a lot of options and configurable cheats!";
		mMetadata.autogenerated = false;
		mMetadata.version = this.modVersion;
		mMetadata.authorList = Arrays.asList(new String[] { "Kodehawa" });
		mMetadata.url = "http://www.minecraftforum.net/topic/1846289-";
		mMetadata.logoFile = "ce.png";
		
		/********* Cheating Essentials METADATA DECLARATION FINISH *********/
	}
	
	@EventHandler
	public void initialization(FMLInitializationEvent e)
	{
		TickRegistry.registerScheduledTickHandler(tickhandler, Side.CLIENT);
		NetworkRegistry.instance().registerConnectionHandler(new CEConnectionHandler());
		ModuleManager.instance();
	}
	
	@EventHandler
	public void postInitialization(FMLPostInitializationEvent e)
	{
		ModuleManager.instance().addSpecialModules();
		ConfigurationManager.instance();
		APICommandManager.addCommands();
		DynamicLogger.instance().writeLog("A.G.C.E. Configuration System version: "+ConfigurationManager.instance().getConfigurationSystemVersion(), Level.INFO);
		DynamicLogger.instance().writeLog("Cheating Essentials v4 succefully started in Minecraft 1.6.4", Level.INFO);
		DynamicLogger.instance().writeSimple("Copyright (C) 2013-2014 Kodehawa. This mod comes with ABSOLUTELY NO WARRANTY. This is free software, and you are welcome to redistribute itunder certain conditions.");
	}
	
	@EventHandler
	public void serverStarting(FMLServerStartingEvent ev)
	{		
		MinecraftServer server = MinecraftServer.getServer();
		ICommandManager icommand = server.getCommandManager();
		ServerCommandManager command = ((ServerCommandManager) icommand);
		
		command.registerCommand(new CommandModuleList());
		command.registerCommand(new CommandModuleToggle());
		command.registerCommand(new CommandSMKeybind());
		command.registerCommand(new CommandAddFriend());
		command.registerCommand(new CommandAddEnemy());
		command.registerCommand(new CommandFlySpeed());
		command.registerCommand(new CommandStepHeight());
		command.registerCommand(new CommandBreadcrumbClear());
		command.registerCommand(new CommandBlockESP());
		command.registerCommand(new CommandModuleHelp());
		command.registerCommand(new CommandSpeedValue());
		command.registerCommand(new CommandBlockFinderRadius());
		command.registerCommand(new CommandChestFinderRadius());
		command.registerCommand(new CommandXray());
	}
	
	public static CheatingEssentials mainInstance()
	{
		return main;
	}
	
	private String majorVersion = "4", minorVersion = "1", revision = "1", status = "";
	public final String modVersion = majorVersion+"."+minorVersion+"."+revision+status;
}